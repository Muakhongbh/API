@page "/ListStudent"
@using API.Data
@using BlazorApp.Service
@inject IStudentService StudentService
@inject NavigationManager NavigationManager
 <h2> List Student</h2>
<button class="btn btn-primary" @onclick="CreateStudent">Create Student</button>
<table class="table">
	<thead>
		<tr>
			<th>Id</th>
			<th>Name</th>
			<th>Last Name</th>
			<th>Email</th>
			<th>Phone</th>
			<th>Birth Date</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var student in students)
		{
			<tr>
				<td>@student.Id</td>
				<td>@student.Name</td>
				<td>@student.LastName</td>
				<td>@student.Email</td>
				<td>@student.Phone</td>
				<td>@student.BirthDate</td>
				<td>
					<button class="btn btn-primary" @onclick="() => EditStudent(student.Id)">Edit</button>
					<button class="btn btn-danger" @onclick="() => DeleteStudent(student.Id)">Delete</button>
					@* <button class="btn btn-outline-light" @onclick="() =>  ">Detail</button> *@
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	private List<Strudent> students = new List<Strudent>(); // = new List<Strudent>() để khởi tạo danh sách rỗng 
	protected override async Task OnInitializedAsync()
	{
		students = await StudentService.GetAllStudents();
	}
	private void CreateStudent()
	{
		NavigationManager.NavigateTo("/createStudent");
	}
	//private void EditStudent(int id)
	private void EditStudent(int id)
	{
		NavigationManager.NavigateTo($"/editstudent/{id}");
	}
	// Edit truyền vào id để lấy ra thông tin của sinh viên 
	private async Task DeleteStudent(int id)
	{
		await StudentService.DeleteStudent(id);
		students = await StudentService.GetAllStudents();
	}
}
